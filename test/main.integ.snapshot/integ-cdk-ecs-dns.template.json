{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc"
     }
    ]
   }
  },
  "VpcpublicSubnet1Subnet2BB74ED7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcpublicSubnet1RouteTable15C15F8E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcpublicSubnet1RouteTableAssociation4E83B6E4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
    },
    "SubnetId": {
     "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
    }
   }
  },
  "VpcpublicSubnet1DefaultRouteB88F9E93": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcpublicSubnet2SubnetE34B022A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcpublicSubnet2RouteTableC5A6DF77": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcpublicSubnet2RouteTableAssociationCCE257FF": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
    },
    "SubnetId": {
     "Ref": "VpcpublicSubnet2SubnetE34B022A"
    }
   }
  },
  "VpcpublicSubnet2DefaultRoute732F0BEB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc"
     }
    ]
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster"
  },
  "TaskTaskRoleE98524A1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Task79114B6B": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "nginx",
      "Name": "main",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "Family": "integcdkecsdnsTask113515E4",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskTaskRoleE98524A1",
      "Arn"
     ]
    }
   }
  },
  "ServiceD69D759B": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE_SPOT",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "ClusterEB0386A7"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "ENABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ServiceSecurityGroupC96ED6A7",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
       },
       {
        "Ref": "VpcpublicSubnet2SubnetE34B022A"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "Task79114B6B"
    }
   },
   "DependsOn": [
    "TaskTaskRoleE98524A1"
   ]
  },
  "ServiceSecurityGroupC96ED6A7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "integ-cdk-ecs-dns/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "DependsOn": [
    "TaskTaskRoleE98524A1"
   ]
  },
  "HostedZoneDB99F866": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "Name": "cdk-ecs-dns.dev.wheatstalk.ca."
   }
  },
  "DnsManager2Table2074A9A9": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "pk",
      "AttributeType": "S"
     },
     {
      "AttributeName": "sk",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "pk",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "sk",
      "KeyType": "RANGE"
     }
    ],
    "StreamSpecification": {
     "StreamViewType": "NEW_IMAGE"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "DnsManager2Route53WriterStreamHandlerServiceRole7D38E64B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "DnsManager2Route53WriterStreamHandlerServiceRoleDefaultPolicy6762EAF8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "route53:ChangeResourceRecordSets",
        "route53:ListResourceRecordSets"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:ListStreams",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DnsManager2Table2074A9A9",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DnsManager2Route53WriterStreamHandlerServiceRoleDefaultPolicy6762EAF8",
    "Roles": [
     {
      "Ref": "DnsManager2Route53WriterStreamHandlerServiceRole7D38E64B"
     }
    ]
   }
  },
  "DnsManager2Route53WriterStreamHandlerD4A2B309": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "8d4c73a2a9eb70b6b40f8a2eea963bf03d1c11ba0b29d753bd83f2537954153d.zip"
    },
    "Description": "src/functions/database-outbox.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "DnsManager2Route53WriterStreamHandlerServiceRole7D38E64B",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "DnsManager2Route53WriterStreamHandlerServiceRoleDefaultPolicy6762EAF8",
    "DnsManager2Route53WriterStreamHandlerServiceRole7D38E64B"
   ]
  },
  "DnsManager2Route53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsDnsManager2Table324922B795D739A9": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 1000,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "DnsManager2Table2074A9A9",
      "StreamArn"
     ]
    },
    "FunctionName": {
     "Ref": "DnsManager2Route53WriterStreamHandlerD4A2B309"
    },
    "MaximumBatchingWindowInSeconds": 5,
    "StartingPosition": "TRIM_HORIZON"
   }
  },
  "DnsManager2exampleTaskStoppingServiceRole5C83E1CF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "DnsManager2exampleTaskStoppingServiceRoleDefaultPolicy562BD360": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:DescribeNetworkInterfaces",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DnsManager2Table2074A9A9",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DnsManager2exampleTaskStoppingServiceRoleDefaultPolicy562BD360",
    "Roles": [
     {
      "Ref": "DnsManager2exampleTaskStoppingServiceRole5C83E1CF"
     }
    ]
   }
  },
  "DnsManager2exampleTaskStoppingCD643596": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "58835d9ca3fbc46e7de629843035b3a18dafc9a82778505eabebd79411ef8080.zip"
    },
    "Description": "src/functions/task-stopping.lambda.ts",
    "Environment": {
     "Variables": {
      "TABLE": {
       "Ref": "DnsManager2Table2074A9A9"
      },
      "HOSTED_ZONE_ID": {
       "Ref": "HostedZoneDB99F866"
      },
      "RECORD_NAME": "example.cdk-ecs-dns.dev.wheatstalk.ca",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "DnsManager2exampleTaskStoppingServiceRole5C83E1CF",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "DnsManager2exampleTaskStoppingServiceRoleDefaultPolicy562BD360",
    "DnsManager2exampleTaskStoppingServiceRole5C83E1CF"
   ]
  },
  "DnsManager2exampleTaskStoppingLogRetentionFDDFD9F3": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DnsManager2exampleTaskStoppingCD643596"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   }
  },
  "DnsManager2exampleTaskStartedServiceRole8F223E36": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "DnsManager2exampleTaskStartedServiceRoleDefaultPolicy78A4C1F8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:DescribeNetworkInterfaces",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DnsManager2Table2074A9A9",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DnsManager2exampleTaskStartedServiceRoleDefaultPolicy78A4C1F8",
    "Roles": [
     {
      "Ref": "DnsManager2exampleTaskStartedServiceRole8F223E36"
     }
    ]
   }
  },
  "DnsManager2exampleTaskStarted5C2C930B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c4db0d9fcff63a74905e9b92198441c9a57088a79957d25885d615555211447f.zip"
    },
    "Description": "src/functions/task-started.lambda.ts",
    "Environment": {
     "Variables": {
      "TABLE": {
       "Ref": "DnsManager2Table2074A9A9"
      },
      "HOSTED_ZONE_ID": {
       "Ref": "HostedZoneDB99F866"
      },
      "RECORD_NAME": "example.cdk-ecs-dns.dev.wheatstalk.ca",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "DnsManager2exampleTaskStartedServiceRole8F223E36",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "DnsManager2exampleTaskStartedServiceRoleDefaultPolicy78A4C1F8",
    "DnsManager2exampleTaskStartedServiceRole8F223E36"
   ]
  },
  "DnsManager2exampleTaskStartedLogRetention6140BF79": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DnsManager2exampleTaskStarted5C2C930B"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   }
  },
  "DnsManager2exampleTaskStoppingRule9B45DCDB": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.ecs"
     ],
     "detail-type": [
      "ECS Task State Change"
     ],
     "detail": {
      "clusterArn": [
       {
        "Fn::GetAtt": [
         "ClusterEB0386A7",
         "Arn"
        ]
       }
      ],
      "group": [
       {
        "Fn::Join": [
         "",
         [
          "service:",
          {
           "Fn::GetAtt": [
            "ServiceD69D759B",
            "Name"
           ]
          }
         ]
        ]
       }
      ],
      "lastStatus": [
       "RUNNING"
      ],
      "desiredStatus": [
       "STOPPED"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "DnsManager2exampleTaskStoppingCD643596",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumRetryAttempts": 1
      }
     }
    ]
   }
  },
  "DnsManager2exampleTaskStoppingRuleAllowEventRuleintegcdkecsdnsDnsManager2exampleTaskStopping667C70757BD2D011": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DnsManager2exampleTaskStoppingCD643596",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "DnsManager2exampleTaskStoppingRule9B45DCDB",
      "Arn"
     ]
    }
   }
  },
  "DnsManager2exampleTaskStartedRuleD933E60E": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.ecs"
     ],
     "detail-type": [
      "ECS Task State Change"
     ],
     "detail": {
      "clusterArn": [
       {
        "Fn::GetAtt": [
         "ClusterEB0386A7",
         "Arn"
        ]
       }
      ],
      "group": [
       {
        "Fn::Join": [
         "",
         [
          "service:",
          {
           "Fn::GetAtt": [
            "ServiceD69D759B",
            "Name"
           ]
          }
         ]
        ]
       }
      ],
      "lastStatus": [
       "RUNNING"
      ],
      "desiredStatus": [
       "RUNNING"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "DnsManager2exampleTaskStarted5C2C930B",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumRetryAttempts": 1
      }
     }
    ]
   }
  },
  "DnsManager2exampleTaskStartedRuleAllowEventRuleintegcdkecsdnsDnsManager2exampleTaskStarted3465C2B17E041E2E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DnsManager2exampleTaskStarted5C2C930B",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "DnsManager2exampleTaskStartedRuleD933E60E",
      "Arn"
     ]
    }
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}