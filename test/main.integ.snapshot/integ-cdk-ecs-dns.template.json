{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc"
     }
    ]
   }
  },
  "VpcpublicSubnet1Subnet2BB74ED7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcpublicSubnet1RouteTable15C15F8E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcpublicSubnet1RouteTableAssociation4E83B6E4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
    },
    "SubnetId": {
     "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
    }
   }
  },
  "VpcpublicSubnet1DefaultRouteB88F9E93": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcpublicSubnet2SubnetE34B022A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcpublicSubnet2RouteTableC5A6DF77": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcpublicSubnet2RouteTableAssociationCCE257FF": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
    },
    "SubnetId": {
     "Ref": "VpcpublicSubnet2SubnetE34B022A"
    }
   }
  },
  "VpcpublicSubnet2DefaultRoute732F0BEB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "integ-cdk-ecs-dns/Vpc"
     }
    ]
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster"
  },
  "TaskTaskRoleE98524A1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Task79114B6B": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "nginx",
      "Name": "main",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "Family": "integcdkecsdnsTask113515E4",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskTaskRoleE98524A1",
      "Arn"
     ]
    }
   }
  },
  "ServiceD69D759B": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE_SPOT",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "ClusterEB0386A7"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "ENABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ServiceSecurityGroupC96ED6A7",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
       },
       {
        "Ref": "VpcpublicSubnet2SubnetE34B022A"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "Task79114B6B"
    }
   },
   "DependsOn": [
    "TaskTaskRoleE98524A1"
   ]
  },
  "ServiceSecurityGroupC96ED6A7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "integ-cdk-ecs-dns/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "DependsOn": [
    "TaskTaskRoleE98524A1"
   ]
  },
  "HostedZoneDB99F866": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "Name": "cdk-ecs-dns.dev.wheatstalk.ca."
   }
  },
  "IpsTable76E0A870": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "pk",
      "AttributeType": "S"
     },
     {
      "AttributeName": "sk",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "gsi1",
      "KeySchema": [
       {
        "AttributeName": "sk",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "pk",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "pk",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "sk",
      "KeyType": "RANGE"
     }
    ],
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TimeToLiveSpecification": {
     "AttributeName": "expiresAt",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "route53:ChangeResourceRecordSets",
        "route53:ListResourceRecordSets"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:ListStreams",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "IpsTable76E0A870",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "Roles": [
     {
      "Ref": "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
     }
    ]
   }
  },
  "IpsRoute53WriterStreamHandler3D4AAE4F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c378422f1b9699dc1318d1a94b029bc11aaa552f37552d95f3cf4ab9f9994db4.zip"
    },
    "Description": "src/Route53Writer/stream-handler.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ]
  },
  "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 1000,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "IpsTable76E0A870",
      "StreamArn"
     ]
    },
    "FunctionName": {
     "Ref": "IpsRoute53WriterStreamHandler3D4AAE4F"
    },
    "MaximumBatchingWindowInSeconds": 5,
    "StartingPosition": "TRIM_HORIZON"
   }
  },
  "IpsRoute53WriterStreamHandlerLogRetention56223588": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "IpsRoute53WriterStreamHandler3D4AAE4F"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   }
  },
  "IpsDnsRecordRegistryGcFunctionServiceRole039C1B08": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B",
    "IpsRoute53WriterStreamHandlerLogRetention56223588",
    "IpsRoute53WriterStreamHandler3D4AAE4F",
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ]
  },
  "IpsDnsRecordRegistryGcFunctionServiceRoleDefaultPolicy30D90A4F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "route53:ChangeResourceRecordSets",
        "route53:ListResourceRecordSets"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IpsTable76E0A870",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IpsTable76E0A870",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IpsDnsRecordRegistryGcFunctionServiceRoleDefaultPolicy30D90A4F",
    "Roles": [
     {
      "Ref": "IpsDnsRecordRegistryGcFunctionServiceRole039C1B08"
     }
    ]
   },
   "DependsOn": [
    "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B",
    "IpsRoute53WriterStreamHandlerLogRetention56223588",
    "IpsRoute53WriterStreamHandler3D4AAE4F",
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ]
  },
  "IpsDnsRecordRegistryGcFunction59809E56": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "129d2354cbf7c1670f8e7abeb2ef64f004ce4d7a847a265b46731e0ae740f0f3.zip"
    },
    "Description": "src/DnsRecordRegistry/gc.lambda.ts",
    "Environment": {
     "Variables": {
      "TABLE": {
       "Ref": "IpsTable76E0A870"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "IpsDnsRecordRegistryGcFunctionServiceRole039C1B08",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "IpsDnsRecordRegistryGcFunctionServiceRoleDefaultPolicy30D90A4F",
    "IpsDnsRecordRegistryGcFunctionServiceRole039C1B08",
    "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B",
    "IpsRoute53WriterStreamHandlerLogRetention56223588",
    "IpsRoute53WriterStreamHandler3D4AAE4F",
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ]
  },
  "IpsDnsRecordRegistryGcFunctionLogRetentionB0F8EB26": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "IpsDnsRecordRegistryGcFunction59809E56"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "DependsOn": [
    "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B",
    "IpsRoute53WriterStreamHandlerLogRetention56223588",
    "IpsRoute53WriterStreamHandler3D4AAE4F",
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ]
  },
  "IpsDnsRecordRegistryProviderframeworkonEventServiceRole8CD14DA5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B",
    "IpsRoute53WriterStreamHandlerLogRetention56223588",
    "IpsRoute53WriterStreamHandler3D4AAE4F",
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ]
  },
  "IpsDnsRecordRegistryProviderframeworkonEventServiceRoleDefaultPolicyBED731D9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IpsDnsRecordRegistryGcFunction59809E56",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IpsDnsRecordRegistryGcFunction59809E56",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IpsDnsRecordRegistryProviderframeworkonEventServiceRoleDefaultPolicyBED731D9",
    "Roles": [
     {
      "Ref": "IpsDnsRecordRegistryProviderframeworkonEventServiceRole8CD14DA5"
     }
    ]
   },
   "DependsOn": [
    "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B",
    "IpsRoute53WriterStreamHandlerLogRetention56223588",
    "IpsRoute53WriterStreamHandler3D4AAE4F",
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ]
  },
  "IpsDnsRecordRegistryProviderframeworkonEvent559C9F0B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (integ-cdk-ecs-dns/Ips/DnsRecordRegistry/Provider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "IpsDnsRecordRegistryGcFunction59809E56",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "IpsDnsRecordRegistryProviderframeworkonEventServiceRole8CD14DA5",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "IpsDnsRecordRegistryProviderframeworkonEventServiceRoleDefaultPolicyBED731D9",
    "IpsDnsRecordRegistryProviderframeworkonEventServiceRole8CD14DA5",
    "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B",
    "IpsRoute53WriterStreamHandlerLogRetention56223588",
    "IpsRoute53WriterStreamHandler3D4AAE4F",
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ]
  },
  "IpsDnsRecordRegistryCustomResource732F1372": {
   "Type": "Custom::DnsRecordRegistry",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "IpsDnsRecordRegistryProviderframeworkonEvent559C9F0B",
      "Arn"
     ]
    },
    "RegisteredRecords": [
     {
      "HostedZoneId": {
       "Ref": "HostedZoneDB99F866"
      },
      "Name": "example.cdk-ecs-dns.dev.wheatstalk.ca"
     }
    ]
   },
   "DependsOn": [
    "IpsRoute53WriterStreamHandlerDynamoDBEventSourceintegcdkecsdnsIpsTable7012C25A9987D14B",
    "IpsRoute53WriterStreamHandlerLogRetention56223588",
    "IpsRoute53WriterStreamHandler3D4AAE4F",
    "IpsRoute53WriterStreamHandlerServiceRoleDefaultPolicyCEEBA75A",
    "IpsRoute53WriterStreamHandlerServiceRole72BBA7E2"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "IpsexampleTaskStoppingServiceRole70F66EEB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "IpsexampleTaskStoppingServiceRoleDefaultPolicy1B2D1710": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:DescribeNetworkInterfaces",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecs:DescribeTasks",
        "ecs:ListTasks"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IpsTable76E0A870",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IpsTable76E0A870",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IpsexampleTaskStoppingServiceRoleDefaultPolicy1B2D1710",
    "Roles": [
     {
      "Ref": "IpsexampleTaskStoppingServiceRole70F66EEB"
     }
    ]
   }
  },
  "IpsexampleTaskStoppingB0846CC9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "028fe682e0a819bd86d380fab439d2c6b6d454b0dda85469562a224c7bff9737.zip"
    },
    "Description": "src/EcsServicePublisher/task-stopping.lambda.ts",
    "Environment": {
     "Variables": {
      "TABLE": {
       "Ref": "IpsTable76E0A870"
      },
      "HOSTED_ZONE_ID": {
       "Ref": "HostedZoneDB99F866"
      },
      "RECORD_NAME": "example.cdk-ecs-dns.dev.wheatstalk.ca",
      "CLUSTER_ARN": {
       "Fn::GetAtt": [
        "ClusterEB0386A7",
        "Arn"
       ]
      },
      "SERVICE_NAME": {
       "Fn::GetAtt": [
        "ServiceD69D759B",
        "Name"
       ]
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "IpsexampleTaskStoppingServiceRole70F66EEB",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "IpsexampleTaskStoppingServiceRoleDefaultPolicy1B2D1710",
    "IpsexampleTaskStoppingServiceRole70F66EEB"
   ]
  },
  "IpsexampleTaskStoppingLogRetention96FE2177": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "IpsexampleTaskStoppingB0846CC9"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   }
  },
  "IpsexampleTaskStartedServiceRoleCA171EE3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "IpsexampleTaskStartedServiceRoleDefaultPolicyC3925505": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:DescribeNetworkInterfaces",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecs:DescribeTasks",
        "ecs:ListTasks"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IpsTable76E0A870",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IpsTable76E0A870",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IpsexampleTaskStartedServiceRoleDefaultPolicyC3925505",
    "Roles": [
     {
      "Ref": "IpsexampleTaskStartedServiceRoleCA171EE3"
     }
    ]
   }
  },
  "IpsexampleTaskStarted4D3B33B5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "097a52c1dcaa0d2ea23292e92771ab1706d781307639344bd40b5eb80483c4c4.zip"
    },
    "Description": "src/EcsServicePublisher/task-started.lambda.ts",
    "Environment": {
     "Variables": {
      "TABLE": {
       "Ref": "IpsTable76E0A870"
      },
      "HOSTED_ZONE_ID": {
       "Ref": "HostedZoneDB99F866"
      },
      "RECORD_NAME": "example.cdk-ecs-dns.dev.wheatstalk.ca",
      "CLUSTER_ARN": {
       "Fn::GetAtt": [
        "ClusterEB0386A7",
        "Arn"
       ]
      },
      "SERVICE_NAME": {
       "Fn::GetAtt": [
        "ServiceD69D759B",
        "Name"
       ]
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "IpsexampleTaskStartedServiceRoleCA171EE3",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "IpsexampleTaskStartedServiceRoleDefaultPolicyC3925505",
    "IpsexampleTaskStartedServiceRoleCA171EE3"
   ]
  },
  "IpsexampleTaskStartedLogRetention4893B271": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "IpsexampleTaskStarted4D3B33B5"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   }
  },
  "IpsexampleTaskSyncServiceRole79F9E733": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "IpsexampleTaskSyncServiceRoleDefaultPolicy4D1B6593": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:DescribeNetworkInterfaces",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecs:DescribeTasks",
        "ecs:ListTasks"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IpsTable76E0A870",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IpsTable76E0A870",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IpsexampleTaskSyncServiceRoleDefaultPolicy4D1B6593",
    "Roles": [
     {
      "Ref": "IpsexampleTaskSyncServiceRole79F9E733"
     }
    ]
   }
  },
  "IpsexampleTaskSyncE0E3736E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6c6de780cbd5e6162fea5ff8d291bf14ab8fdefe20a242e85b59913ffdaaadb0.zip"
    },
    "Description": "src/EcsServicePublisher/task-sync.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "CLUSTER_ARN": {
       "Fn::GetAtt": [
        "ClusterEB0386A7",
        "Arn"
       ]
      },
      "HOSTED_ZONE_ID": {
       "Ref": "HostedZoneDB99F866"
      },
      "RECORD_NAME": "example.cdk-ecs-dns.dev.wheatstalk.ca",
      "SERVICE_NAME": {
       "Fn::GetAtt": [
        "ServiceD69D759B",
        "Name"
       ]
      },
      "TABLE": {
       "Ref": "IpsTable76E0A870"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "IpsexampleTaskSyncServiceRole79F9E733",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "IpsexampleTaskSyncServiceRoleDefaultPolicy4D1B6593",
    "IpsexampleTaskSyncServiceRole79F9E733"
   ]
  },
  "IpsexampleTaskSyncLogRetention911D096E": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "IpsexampleTaskSyncE0E3736E"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   }
  },
  "IpsexampleTaskSyncCurrentVersionB2E1EEC216faf06d77fe5f57b8bc95c9634626dc": {
   "Type": "AWS::Lambda::Version",
   "Properties": {
    "FunctionName": {
     "Ref": "IpsexampleTaskSyncE0E3736E"
    }
   }
  },
  "IpsexampleTaskStoppingRule6D4ED26D": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.ecs"
     ],
     "detail-type": [
      "ECS Task State Change"
     ],
     "detail": {
      "clusterArn": [
       {
        "Fn::GetAtt": [
         "ClusterEB0386A7",
         "Arn"
        ]
       }
      ],
      "group": [
       {
        "Fn::Join": [
         "",
         [
          "service:",
          {
           "Fn::GetAtt": [
            "ServiceD69D759B",
            "Name"
           ]
          }
         ]
        ]
       }
      ],
      "lastStatus": [
       "RUNNING"
      ],
      "desiredStatus": [
       "STOPPED"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "IpsexampleTaskStoppingB0846CC9",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumRetryAttempts": 50
      }
     }
    ]
   }
  },
  "IpsexampleTaskStoppingRuleAllowEventRuleintegcdkecsdnsIpsexampleTaskStoppingFE52DA9C8AC45C83": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "IpsexampleTaskStoppingB0846CC9",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "IpsexampleTaskStoppingRule6D4ED26D",
      "Arn"
     ]
    }
   }
  },
  "IpsexampleTaskStartedRuleC66AF360": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.ecs"
     ],
     "detail-type": [
      "ECS Task State Change"
     ],
     "detail": {
      "clusterArn": [
       {
        "Fn::GetAtt": [
         "ClusterEB0386A7",
         "Arn"
        ]
       }
      ],
      "group": [
       {
        "Fn::Join": [
         "",
         [
          "service:",
          {
           "Fn::GetAtt": [
            "ServiceD69D759B",
            "Name"
           ]
          }
         ]
        ]
       }
      ],
      "lastStatus": [
       "RUNNING"
      ],
      "desiredStatus": [
       "RUNNING"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "IpsexampleTaskStarted4D3B33B5",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumRetryAttempts": 50
      }
     }
    ]
   }
  },
  "IpsexampleTaskStartedRuleAllowEventRuleintegcdkecsdnsIpsexampleTaskStarted0778E048F3E5C4C2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "IpsexampleTaskStarted4D3B33B5",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "IpsexampleTaskStartedRuleC66AF360",
      "Arn"
     ]
    }
   }
  },
  "IpsexampleTaskSyncRuleB728B2E6": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.ecs"
     ],
     "detail-type": [
      "ECS Service Action"
     ],
     "detail": {
      "eventName": [
       "SERVICE_STEADY_STATE"
      ],
      "clusterArn": [
       {
        "Fn::GetAtt": [
         "ClusterEB0386A7",
         "Arn"
        ]
       }
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "IpsexampleTaskSyncE0E3736E",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumRetryAttempts": 50
      }
     }
    ]
   }
  },
  "IpsexampleTaskSyncRuleAllowEventRuleintegcdkecsdnsIpsexampleTaskSyncD3FE10BEB521036F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "IpsexampleTaskSyncE0E3736E",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "IpsexampleTaskSyncRuleB728B2E6",
      "Arn"
     ]
    }
   }
  },
  "IpsexampleTaskSyncTrigger60F3D215": {
   "Type": "Custom::Trigger",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91",
      "Arn"
     ]
    },
    "HandlerArn": {
     "Ref": "IpsexampleTaskSyncCurrentVersionB2E1EEC216faf06d77fe5f57b8bc95c9634626dc"
    },
    "InvocationType": "Event",
    "Timeout": "60000",
    "ExecuteOnHandlerChange": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ]
  },
  "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "lambda:InvokeFunction"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "IpsexampleTaskSyncE0E3736E",
               "Arn"
              ]
             },
             ":*"
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "30d27607a2f6a97cb964228693797269365769d596600286bcb294bbb3b1844d.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A"
   ]
  }
 },
 "Outputs": {
  "HostedZoneId": {
   "Value": {
    "Ref": "HostedZoneDB99F866"
   }
  },
  "DnsManagerPath": {
   "Value": "integ-cdk-ecs-dns/Ips"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}