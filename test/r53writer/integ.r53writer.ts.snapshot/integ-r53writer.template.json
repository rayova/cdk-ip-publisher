{
 "Resources": {
  "HostedZoneDB99F866": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "Name": "r53writer.integ.wheatstalk.ca."
   }
  },
  "TableCD117FA1": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "pk",
      "AttributeType": "S"
     },
     {
      "AttributeName": "sk",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "gsi1",
      "KeySchema": [
       {
        "AttributeName": "sk",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "pk",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "pk",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "sk",
      "KeyType": "RANGE"
     }
    ],
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TimeToLiveSpecification": {
     "AttributeName": "expiresAt",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "Route53WriterStreamHandlerServiceRole0B05338E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Route53WriterStreamHandlerServiceRoleDefaultPolicy514EDF43": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListStreams",
        "route53:ChangeResourceRecordSets",
        "route53:ListResourceRecordSets",
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TableCD117FA1",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Route53WriterStreamHandlerServiceRoleDefaultPolicy514EDF43",
    "Roles": [
     {
      "Ref": "Route53WriterStreamHandlerServiceRole0B05338E"
     }
    ]
   }
  },
  "Route53WriterStreamHandlerCD9F6D4D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c378422f1b9699dc1318d1a94b029bc11aaa552f37552d95f3cf4ab9f9994db4.zip"
    },
    "Description": "src/Route53Writer/stream-handler.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "Route53WriterStreamHandlerServiceRole0B05338E",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "Route53WriterStreamHandlerServiceRoleDefaultPolicy514EDF43",
    "Route53WriterStreamHandlerServiceRole0B05338E"
   ]
  },
  "Route53WriterStreamHandlerDynamoDBEventSourceintegr53writerTable7EB5E9EFD2C7FB07": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 1000,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "TableCD117FA1",
      "StreamArn"
     ]
    },
    "FunctionName": {
     "Ref": "Route53WriterStreamHandlerCD9F6D4D"
    },
    "MaximumBatchingWindowInSeconds": 5,
    "StartingPosition": "TRIM_HORIZON"
   }
  },
  "Route53WriterStreamHandlerLogRetentionA9F9EAFE": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "Route53WriterStreamHandlerCD9F6D4D"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ]
  },
  "WriteDatabaseServiceRole4436E71B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "WriteDatabaseServiceRoleDefaultPolicy22264EBA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TableCD117FA1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TableCD117FA1",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WriteDatabaseServiceRoleDefaultPolicy22264EBA",
    "Roles": [
     {
      "Ref": "WriteDatabaseServiceRole4436E71B"
     }
    ]
   }
  },
  "WriteDatabaseEA67E64E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4a4eebb418425e01c1aeb088b9bab41f6f39c8ad321620a6f8c0f8017c202942.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE": {
       "Ref": "TableCD117FA1"
      },
      "HOSTED_ZONE_ID": {
       "Ref": "HostedZoneDB99F866"
      },
      "RECORD_NAME": "add.r53writer.integ.wheatstalk.ca",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "WriteDatabaseServiceRole4436E71B",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "WriteDatabaseServiceRoleDefaultPolicy22264EBA",
    "WriteDatabaseServiceRole4436E71B"
   ]
  }
 },
 "Outputs": {
  "ExportsOutputRefWriteDatabaseEA67E64E8C4A0BE9": {
   "Value": {
    "Ref": "WriteDatabaseEA67E64E"
   },
   "Export": {
    "Name": "integ-r53writer:ExportsOutputRefWriteDatabaseEA67E64E8C4A0BE9"
   }
  },
  "ExportsOutputRefHostedZoneDB99F8662BBAE844": {
   "Value": {
    "Ref": "HostedZoneDB99F866"
   },
   "Export": {
    "Name": "integ-r53writer:ExportsOutputRefHostedZoneDB99F8662BBAE844"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}